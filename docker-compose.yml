services:
  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: "rabbitmq"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq"
  postgres:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_DB=weather
  restapi-server:
    build:
      dockerfile: ./docker/go/Dockerfile
      additional_contexts:
        main: ./restapi-server
        common: ./common
    restart: always
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - GIN_MODE=release
    ports:
      - 4000:4000
    volumes:
      - ./restapi-server/docker.yml:/out/config.yml
  weather-service:
    build:
      dockerfile: ./docker/go/Dockerfile
      additional_contexts:
        main: ./weather-service
        common: ./common
    restart: always
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - GIN_MODE=release
    volumes:
      - ./weather-service/docker.yml:/out/config.yml
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./apps/prometheus:/etc/prometheus
      - prom_data:/prometheus
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./apps/grafana:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana

volumes:
  prom_data:
  grafana_data: